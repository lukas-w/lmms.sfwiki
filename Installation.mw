This is meant to be a very basic and linear tutorial on how to install LMMS.

= Installation under various distributions =

'''Please note that many distributions only ship outdated versions of LMMS (0.3.x or even older!). It's strongly advised against using these old versions as they're rather unstable and feature-incomplete compared to the current 0.4.x series!'''

== Ubuntu ==

To install LMMS on Ubuntu 9.10 (Karmic), open Ubuntu Software Centre and search for "LMMS".

== Older Versions of LMMS ==

Ubuntu Jaunty comes with an old version of LMMS (0.4.2). To install the latest version of LMMS on Ubuntu Jaunty, run the command below:

 sudo wget https://dl.getdropbox.com/u/29948/jaunty.list -O /etc/apt/sources.list.d/tobydox.list && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ADDE29B2 && sudo aptitude update && sudo aptitude install lmms ubuntustudio-plugins lmms-vst

To install LMMS manually for Intrepid and Hardy, please take a look at [https://launchpad.net/~tobydox/+archive/ppa Tobydox' Personal Package Archive].


* If you want to try the latest UNSTABLE branch, run this command instead. Please note that the LMMS developers do not support this version as it is unfinished:

 sudo wget https://dl.getdropbox.com/u/29948/winejaunty.list -O /etc/apt/sources.list.d/winehq.list && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 387EE263 && sudo aptitude update && sudo aptitude install libqt4-dev libflac++6 flac libflac++-dev qt4-dev-tools git-core build-essential libsndfile1-dev libasound2-dev libjack0.100.0-dev libjackasyn-dev libsdl-sound1.2-dev ubuntustudio-audio-plugins libsdl1.2-dev libsdl-mixer1.2-dev libvorbis-dev libvorbisfile3 libvorbisenc2 libsamplerate0-dev libstk0-dev stk libfftw3-dev libfluidsynth-dev git wine wine-dev cmake && mkdir lmms-install && cd lmms-install && git clone git://lmms.git.sourceforge.net/gitroot/lmms/lmms && cd lmms && mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX=/usr && make && sudo make install && cd && rm -r lmms-install

* Compiling LMMS for the first time requires a download of roughly 115mb, including dependencies and other packages. Without dependencies , it requires a download of around 23mb.
* This command adds the winehq repository for the latest version of wine and wine-dev, required for VST support.

== Gentoo Linux ==

LMMS is now avaible for Gentoo in the official portage tree.

So, Gentoo users who want to install LMMS only have to do:

 # echo "media-sound/lmms **" >> /etc/portage/package.keywords
 # emerge -av lmms

== Fedora ==

LMMS is now available in the standard Fedora updates repository.  If you wish to use VST plugins, you will need to install the ''lmms-vst'' package as well as the ''lmms'' package.

Just go to: ''System''/''Administration''/''Add''/''Remove Software'' to choose these packages.

= Installing LMMS from Git =

To install manually from Git (Examples provided assume you're running Debian GNU/Linux):

* First you need to clone the Git repository - or update your sources - if you're upgrading from a previous version. The following commands will do this for you inside a newly created folder named "lmms".
 git clone git://lmms.git.sourceforge.net/gitroot/lmms
 cd lmms
 git checkout -b stable-0.4 origin/stable-0.4
* Next you have to configure LMMS:
 mkdir build
 cd build
 cmake .. -DCMAKE_INSTALL_PREFIX=/usr
* resolve any unmet dependencies (see section "[[Installation#Resolving_dependencies|Resolving dependencies]]" below for more on this topic)
* Now compile LMMS:
 make
** People with more than one CPU core can use make's -j option to compile some files in parallel.  For instance:
 make -j2
* Finally you can install LMMS by running as root
 sudo make install


== Resolving dependencies ==

To compile LMMS from sources you need several development libraries, from graphical to sound ones. Some are essential and some are optional.

=== Required libraries ===

* Qt >= 4.3 libs + development files (Qt 4.4 recommended for optimal performance, Qt 4.5 heavily improves GUI performance) 
** under Debian based distributions run
 aptitude install libqt4-dev qt4-dev-tools build-essential
* sound file library - for reading and writing files containing sampled audio data
** under Debian run aptitude install ''libsndfile1-dev''

Next you need to allow LMMS to communicate with your audio hardware, so you have to choose one or more of the following setups and provide corresponding development libraries:
* [http://www.alsa-project.org/ ALSA] - Advanced Linux Sound Architecture - apart from libs and -dev libs, you need ALSA modules for your soundcard (built-in with 2.6.x kernels) and those modules loaded - see [http://www.alsa-project.org/ http://www.alsa-project.org/] and [http://alsa.opensrc.org/ http://alsa.opensrc.org/] for info - '''ALSA is the recommended audio-interface to use with LMMS'''.
** under Debian run ''aptitude install libasound2-dev''
* [http://jackaudio.org/ JACK] - Jack Audio Connection Kit - a low latency audio server that allows the connection of multiple applications to an audio device (typically an ALSA one), as well as allowing them to share audio between themselves
** under Debian run ''aptitude install libjack0.100.0-dev libjackasyn-dev''
* [http://www.libsdl.org/index.php SDL] - Simple Directmedia Layer - a layer that allows LMMS to output it's sound to sound servers like aRts, esd (otherwise you need to kill them ''before'' starting LMMS)
** under Debian run ''aptitude install libsdl-sound1.2-dev libsdl1.2-dev libsdl-mixer1.2-dev''
* [http://www.opensound.com/ OSS] - Open Sound System - now replaced by [http://www.alsa-project.org/ ALSA]



=== Optional (but strongly recommended) libraries ===

To make use of the full LMMS potential you may need to install some extra libraries. Here is a list of some of them:

* ogg-vorbis libraries - to decode/encode .ogg samples and/or songs
** under Debian run aptitude install ''libvorbis-dev libvorbisfile3 libvorbisenc2''
* samplerate conversion tools - to downsample and upsample audio from 4Hz up to 192kHz
** under Debian run aptitude install ''libsamplerate0-dev''
* asynchronous library for interfacing with the JACK sound server - to convert programs that do sound input or output via the OSS system into JACK clients by starting them with the jacklaunch command
* STK library + headers for using STK (Sound Synthesis Toolkit)
** under Debian run aptitude install ''libstk0-dev stk''
* WINE + devel-packages for being able to use VST-plugins within LMMS
** under Debian run aptitude install ''libwine-dev libwine''
* FFTW3 - used by the SpectrumAnalyzer plugin
** under Debian run aptitude install ''libfftw3-dev''
* Fluidsynth - required to build the powerful Sf2Player plugin
** under Debian run aptitude install ''libfluidsynth-dev''

If you don't install all the libraries '''before''' running cmake, you'll receive warnings afterwards. So remove CMakeCache.txt and run cmake again until you get the desired result.

== Other notes ==

After running cmake you might get the following cmake error:

   CMake Error: The following variables are used in this project, but they are set to NOTFOUND.
   Please set them or make sure they are set and tested correctly in the CMake files:
   X11_Xft_LIB (ADVANCED)
      linked by target "remote_zynaddsubfx" in directory /home/kizzo/lmms-work/lmms/plugins/z
   ynaddsubfx

I forgot exactly how I arrived to this solution: aptitude install libxft-dev libfreetype6-dev .

= Navigation =

{| style="border: 1px solid black;"
|-
| Prev: [[Requirements]]
| Up: [[NewManual]]
| Next: [[Terms and Conventions]]
|}

[[Category:Introduction]]
[[Category:0.3-Manual]]
